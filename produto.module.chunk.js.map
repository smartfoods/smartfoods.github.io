{"version":3,"sources":["./src/app/pages/cadastros/produto/abstract-produto.component.ts","./src/app/pages/cadastros/produto/create/create-produto.component.html","./src/app/pages/cadastros/produto/create/create-produto.component.scss","./src/app/pages/cadastros/produto/create/create-produto.component.ts","./src/app/pages/cadastros/produto/edit/edit-produtos.component.html","./src/app/pages/cadastros/produto/edit/edit-produtos.component.scss","./src/app/pages/cadastros/produto/edit/edit-produtos.component.ts","./src/app/pages/cadastros/produto/listar/listar-produtos.component.html","./src/app/pages/cadastros/produto/listar/listar-produtos.component.scss","./src/app/pages/cadastros/produto/listar/listar-produtos.component.ts","./src/app/pages/cadastros/produto/popup/composicao-produto-popup-modal.component.html","./src/app/pages/cadastros/produto/popup/composicao-produto-popup-modal.component.scss","./src/app/pages/cadastros/produto/popup/composicao-produto-popup-modal.component.ts","./src/app/pages/cadastros/produto/popup/info-nutricional-produto-popup-modal.component.html","./src/app/pages/cadastros/produto/popup/info-nutricional-produto-popup-modal.component.ts","./src/app/pages/cadastros/produto/produto-routing.module.ts","./src/app/pages/cadastros/produto/produto.module.ts"],"names":[],"mappings":"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","file":"produto.module.chunk.js","sourcesContent":["import { TrataErrorService } from 'services/trata-error.service';\r\nimport { UnidadeMedidaService } from './../../config/unidademedida/unidade-medida.service';\r\nimport { ProdutoService } from './produto.service';\r\nimport { CategoriaService } from './../../config/categoria/categoria.service';\r\nimport { ProdutoInfoNutricionalDTO } from './../../../../models/domain/produto-info-nutricional.dto';\r\nimport { ProdutoDTO } from 'models/domain/produto.dto';\r\nimport { CategoriaDTO } from 'models/domain/categoria.dto';\r\nimport { ProdutoComposicaoDTO } from './../../../../models/domain/produto-composicao.dto';\r\nimport { AbstractBaseComponent } from 'config/core/abstract-base.component';\r\n\r\nimport { ComboDTO } from 'models/domain/combo.dto';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { EventEmitterService } from 'app/shared/event/event-emitter.services';\r\nimport { SelectComponent, SelectItem } from 'ng2-select';\r\n\r\n\r\nexport abstract class AbstractProdutoComponent extends AbstractBaseComponent {\r\n\r\n\r\n  public prodComp: ComboDTO;\r\n  public categorias: CategoriaDTO[];\r\n\r\n  public produtosComposicoes: ProdutoComposicaoDTO[] = [];\r\n  public produtosInfoNutricionais: ProdutoInfoNutricionalDTO[] = [];\r\n  public comboUnidades: ComboDTO[] = [];\r\n  public comboUnidadesEmCasa: ComboDTO[] = [];\r\n  public comboCategorias: ComboDTO[] = [];\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    public location: Location,\r\n    public categoriaService: CategoriaService,\r\n    public unidadeService: UnidadeMedidaService) {\r\n    super();\r\n  }\r\n\r\n  public carregarCombosProduto() {\r\n    this.categoriaService.findAll()\r\n      .subscribe(\r\n        response => this.comboCategorias = this.preencharCombo(response, 'id', 'nmCategoria'),\r\n        error => TrataErrorService.tratarError(error)\r\n      );\r\n    this.unidadeService.findAll()\r\n      .subscribe(\r\n        response => {\r\n          this.comboUnidades = this.preencharCombo(response, 'id', 'sgUnidadeMedida');\r\n          this.comboUnidadesEmCasa = this.preencharCombo(response, 'id', 'sgUnidadeMedida')\r\n        },\r\n        error => TrataErrorService.tratarError(error)\r\n      );\r\n  }\r\n\r\n  public voltar() {\r\n    this.location.back();\r\n  }\r\n\r\n  mudarImage(evento) {\r\n    this.atualizarFoto(evento.foto);\r\n  }\r\n\r\n  private atualizarFoto(foto: any) {\r\n    this.urlFoto = foto;\r\n  }\r\n\r\n  protected criarFormulario() {\r\n    this.formulario = this.fb.group({\r\n      id: [''],\r\n      nmProduto: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\r\n      vlVenda: ['', Validators.required],\r\n      vlCompra: [''],\r\n      status: ['A'],\r\n      urlImagem: [''],\r\n      categoria: ['', Validators.required],\r\n      unidadeVenda: [''],\r\n      qtAcompanhamento: [''],\r\n      qtMinimaEstoque: [''],\r\n      nrCodigoBarra: [''],\r\n      dsUrlBlog: [''],\r\n      dsInfoComplementar: [''],\r\n      emCada: [''],\r\n      qtEmcada: [''],\r\n      composicoes: [''],\r\n      infoNutricionais: ['']\r\n    })\r\n    this.urlFoto = this.urlFotoAvatar;\r\n  }\r\n\r\n\r\n  protected atualizarForm(produto: ProdutoDTO) {\r\n    this.formulario.patchValue({\r\n      id: produto.id,\r\n      nmProduto: produto.nmProduto,\r\n      vlVenda: produto.vlVenda,\r\n      vlCompra: produto.vlCompra,\r\n      status: produto.status,\r\n      urlImagem: produto.urlImagem,\r\n      qtMinimaEstoque: produto.qtMinimaEstoque,\r\n      qtAcompanhamento: produto.qtAcompanhamento,\r\n      dsUrlBlog: produto.dsUrlBlog,\r\n      qtEmcada: produto.qtEmcada,\r\n      nrCodigoBarra: produto.nrCodigoBarra,\r\n      dsInfoComplementar: produto.dsInfoComplementar\r\n    })\r\n    if (produto.categoria != null) {\r\n      this.formulario.patchValue({\r\n        categoria: [{ id: produto.categoria.id, text: produto.categoria.nmCategoria }],\r\n      })\r\n    }\r\n    if (produto.unidadeVenda != null) {\r\n      this.formulario.patchValue({\r\n        unidadeVenda: [{ id: produto.unidadeVenda.id, text: produto.unidadeVenda.nmUnidadeMedida }],\r\n      })\r\n    }\r\n    if (produto.emCada != null) {\r\n      this.formulario.patchValue({\r\n        emCada: [{ id: produto.emCada.id, text: produto.emCada.nmUnidadeMedida }],\r\n      })\r\n    }\r\n    if (produto.composicoes != null) {\r\n      this.produtosComposicoes = produto.composicoes\r\n    }\r\n    if (produto.infoNutricionais != null) {\r\n      this.produtosInfoNutricionais = produto.infoNutricionais;\r\n    }\r\n  }\r\n\r\n  confirmarCompProd(value: any) {\r\n    let prod = {} as ProdutoComposicaoDTO;\r\n    prod.idProduto = value.idProdutoPai;\r\n    prod.idProdutoComposicao = value.produtoComp[0].id;\r\n    prod.nmProdutoComposicao = value.produtoComp[0].text;\r\n    prod.idUnidadeMedida = value.unidade[0].id;\r\n    prod.nmUnidadeMedida = value.unidade[0].text;\r\n    prod.qtUtilizada = Number(value.qtUtilizada)\r\n    prod.mostrarUnidade = value.mostrarUnidade\r\n    prod.emAlteracao = value.emAlteracao;\r\n\r\n    let position = this.produtosComposicoes.findIndex(x => x.idProdutoComposicao == prod.idProdutoComposicao);\r\n    if (position == -1) {\r\n      this.produtosComposicoes.push(prod);\r\n    } else {\r\n      if (prod.emAlteracao) {\r\n        this.produtosComposicoes[position] = prod;\r\n      } else {\r\n        this.produtosComposicoes[position].qtUtilizada += prod.qtUtilizada\r\n      }\r\n    }\r\n  }\r\n\r\n  excluirItem(item: ProdutoComposicaoDTO) {\r\n    this.produtosComposicoes =\r\n      this.produtosComposicoes\r\n        .filter((prod: ProdutoComposicaoDTO) => prod.idProdutoComposicao != item.idProdutoComposicao)\r\n  }\r\n\r\n  confirmarInfoNutricional(value: any) {\r\n    let prod = {} as ProdutoInfoNutricionalDTO;\r\n    prod.idProduto = value.idProduto;\r\n    prod.idInfoNutricional = value.infoNutricional[0].id;\r\n    prod.dsInfoNutricional = value.infoNutricional[0].text;\r\n    prod.idUnidadeMedida = value.unidade[0].id;\r\n    prod.sgUnidadeMedida = value.unidade[0].text;\r\n    prod.qtUtilizada = Number(value.qtUtilizada)\r\n\r\n    let position = this.produtosInfoNutricionais.findIndex(x => x.idInfoNutricional == prod.idInfoNutricional);\r\n    if (position == -1) {\r\n      this.produtosInfoNutricionais.push(prod);\r\n    } else {\r\n      if (prod.emAlteracao) {\r\n        this.produtosInfoNutricionais[position] = prod;\r\n      } else {\r\n        this.produtosInfoNutricionais[position].qtUtilizada += prod.qtUtilizada;\r\n      }\r\n    }\r\n  }\r\n\r\n  excluirItemInfoNutriciobnal(item: ProdutoInfoNutricionalDTO) {\r\n    this.produtosInfoNutricionais =\r\n      this.produtosInfoNutricionais\r\n        .filter((prod: ProdutoInfoNutricionalDTO) => prod.idInfoNutricional != item.idInfoNutricional)\r\n  }\r\n\r\n  protected preencharProduto(value: any): ProdutoDTO {\r\n    let prod = {} as ProdutoDTO;\r\n    if (value != null && value.id != null) {\r\n      prod.id = value.id;\r\n    }\r\n    prod.nmProduto = value.nmProduto;\r\n    prod.vlVenda = value.vlVenda;\r\n    prod.vlCompra = value.vlCompra;\r\n    prod.qtAcompanhamento =value.qtAcompanhamento;\r\n    prod.status = 'A';\r\n    prod.urlImagem = this.urlFoto;\r\n    if (value.categoria != null && value.categoria[0].id != null) {\r\n      prod.categoria = { id: value.categoria[0].id, nmCategoria: value.categoria[0].text }\r\n    }\r\n    if (value.unidadeVenda != null && value.unidadeVenda != null && value.unidadeVenda[0].id != null) {\r\n      prod.unidadeVenda = { id: value.unidadeVenda[0].id, nmUnidadeMedida: value.unidadeVenda[0].text };\r\n    }\r\n    prod.qtMinimaEstoque = value.qtMinimaEstoque;\r\n    prod.nrCodigoBarra = value.nrCodigoBarra;\r\n    prod.dsUrlBlog = value.dsUrlBlog;\r\n    prod.dsInfoComplementar = value.dsInfoComplementar;\r\n    if (value.emCada != '' && value.emCada != null && value.emCada[0].id != null) {\r\n      prod.emCada = { id: value.emCada[0].id, nmUnidadeMedida: value.emCada[0].text };\r\n      prod.qtEmcada = value.qtEmcada;\r\n    }\r\n    prod.composicoes = this.produtosComposicoes;\r\n    prod.infoNutricionais = this.produtosInfoNutricionais;\r\n    return prod;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/cadastros/produto/abstract-produto.component.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        <strong>Produto</strong>\\r\\n        <small> - inclusão de um novo produto</small>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-block\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-4 col-md-4\\\">\\r\\n              <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                  <strong>Imagens do produto</strong>\\r\\n                </div>\\r\\n                <div class=\\\"card-block\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <img [src]=\\\"urlFoto\\\" class=\\\"img-avatar-160 center-block \\\" alt=\\\"avatar\\\">\\r\\n                  </div>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"card-footer\\\">\\r\\n                   <upload-imagem  botaoIcone=\\\"fa fa-save\\\" botaoTitulo=\\\"Alterar imagem\\\" botaoCss=\\\"btn btn-md btn-primary btn-block\\\" (onSelecionarImagem)=\\\"mudarImage($event)\\\">\\r\\n                  </upload-imagem>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <!--/.col-->\\r\\n\\r\\n            <div class=\\\"col-md-8 col-sm-8\\\">\\r\\n              <form [formGroup]=\\\"formulario\\\">\\r\\n                <tabset>\\r\\n                  <tab>\\r\\n                    <ng-template tabHeading>\\r\\n                      <i class=\\\"icon-list\\\"></i> Dados &nbsp;\\r\\n                    </ng-template>\\r\\n                    <div [ngClass]=\\\"aplicarCssGroupRow(formulario.get('nmProduto'))\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">Nome</label>\\r\\n                      <div class=\\\"col-sm-10\\\">\\r\\n                        <input [autofoco]=\\\"true\\\" type=\\\"text\\\" class=\\\"form-control input\\\" [ngClass]=\\\"aplicarCssForm(formulario.get('nmProduto'))\\\" name=\\\"nmProduto\\\"\\r\\n                          maxlength=\\\"50\\\" placeholder=\\\"Digite o nome o produto\\\" formControlName=\\\"nmProduto\\\">\\r\\n                        <alert-mensagem [mostrarErro]=\\\"isInvalido(formulario.get('nmProduto'))\\\" titulo=\\\"Erro:\\\" mensagem=\\\"o campo Nome do produto deve ter entre 4 a 50 caracteres\\\">\\r\\n                        </alert-mensagem>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div [ngClass]=\\\"aplicarCssGroupRow(formulario.get('categoria'))\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">Categoria</label>\\r\\n                      <div class=\\\"col-sm-4\\\" >\\r\\n                        <ng-select [multiple]=\\\"false\\\" formControlName=\\\"categoria\\\" [items]=\\\"comboCategorias\\\" placeholder=\\\"{{label.selecione}}\\\" >\\r\\n                        </ng-select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div [ngClass]=\\\"aplicarCssGroupRow(formulario.get('unidadeVenda'))\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">Unid. de venda </label>\\r\\n                      <div class=\\\"col-sm-4\\\">\\r\\n                        <ng-select [multiple]=\\\"false\\\" formControlName=\\\"unidadeVenda\\\" [items]=\\\"comboUnidades\\\" placeholder=\\\"{{label.selecione}}\\\">\\r\\n                        </ng-select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div [ngClass]=\\\"aplicarCssGroupRow(formulario.get('vlVenda'))\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">Valor venda</label>\\r\\n                      <div class=\\\"col-sm-4\\\">\\r\\n                        <input type=\\\"text\\\" currencyMask [options]=\\\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\\\" class=\\\"form-control input\\\" [ngClass]=\\\"aplicarCssForm(formulario.get('vlVenda'))\\\"\\r\\n                          name=\\\"vlVenda\\\" maxlength=\\\"10\\\" formControlName=\\\"vlVenda\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div [ngClass]=\\\"aplicarCssGroupRow(formulario.get('vlCompra'))\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">Valor compra</label>\\r\\n                      <div class=\\\"col-sm-4\\\">\\r\\n                        <input type=\\\"text\\\" currencyMask [options]=\\\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\\\" class=\\\"form-control input\\\" [ngClass]=\\\"aplicarCssForm(formulario.get('vlCompra'))\\\"\\r\\n                          name=\\\"vlCompra\\\" maxlength=\\\"10\\\" formControlName=\\\"vlCompra\\\" [ngClass]=\\\"aplicarCssForm(formulario.get('vlCompra'))\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div [ngClass]=\\\"aplicarCssGroupRow(formulario.get('qtMinimaEstoque'))\\\">\\r\\n                      <label class=\\\"col-sm-3 form-control-label\\\">Qtd minima em estoque</label>\\r\\n                      <div class=\\\"col-sm-3\\\">\\r\\n                        <input numberOnly type=\\\"text\\\" formControlName=\\\"qtMinimaEstoque\\\" class=\\\"form-control input-sm\\\" name=\\\"qtMinimaEstoque\\\" formControlName=\\\"qtMinimaEstoque\\\"\\r\\n                          maxlength=\\\"4\\\" [ngClass]=\\\"aplicarCssForm(formulario.get('qtMinimaEstoque'))\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div [ngClass]=\\\"aplicarCssGroupRow(formulario.get('qtAcompanhamento'))\\\">\\r\\n                      <label class=\\\"col-sm-3 form-control-label\\\">Qtd acompanhamentos</label>\\r\\n                      <div class=\\\"col-sm-3\\\">\\r\\n                        <input numberOnly type=\\\"text\\\" formControlName=\\\"qtAcompanhamento\\\" class=\\\"form-control input-sm\\\" name=\\\"qtAcompanhamento\\\" formControlName=\\\"qtAcompanhamento\\\"\\r\\n                          maxlength=\\\"2\\\" [ngClass]=\\\"aplicarCssForm(formulario.get('qtAcompanhamento'))\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div [ngClass]=\\\"aplicarCssGroupRow(formulario.get('nrCodigoBarra'))\\\">\\r\\n                      <label class=\\\"col-sm-3 form-control-label\\\">Cód barra</label>\\r\\n                      <div class=\\\"col-sm-3\\\">\\r\\n                        <input numberOnly type=\\\"text\\\" formControlName=\\\"nrCodigoBarra\\\" class=\\\"form-control input\\\" name=\\\"codigoBarra\\\" formControlName=\\\"nrCodigoBarra\\\"\\r\\n                          maxlength=\\\"13\\\" [ngClass]=\\\"aplicarCssForm(formulario.get('nrCodigoBarra'))\\\">\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                  </tab>\\r\\n                  <tab>\\r\\n                    <ng-template tabHeading>\\r\\n                      <i class=\\\"icon-calculator\\\"></i> Composição &nbsp;\\r\\n                    </ng-template>\\r\\n                    <div class=\\\"from-group row\\\">\\r\\n\\r\\n                      <div class=\\\"col-sm-12\\\">\\r\\n                        <div class=\\\"card\\\">\\r\\n                          <div class=\\\"card-header\\\">\\r\\n                            <strong>Composição do produto</strong>\\r\\n                            <div class=\\\"card-actions\\\">\\r\\n                              <button type=\\\"button\\\" (click)=\\\"composicaoModal.show()\\\">\\r\\n                                <i class=\\\"icon-plus\\\"></i>\\r\\n                              </button>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"card-block\\\" *ngIf=\\\"produtosComposicoes?.length > 0\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n\\r\\n                              <table class=\\\"table table-striped\\\">\\r\\n                                <thead>\\r\\n                                  <th class=\\\"text-left\\\">Produto</th>\\r\\n                                  <th class=\\\"text-right\\\">Quantidade</th>\\r\\n                                  <th class=\\\"text-center\\\">Mostrar</th>\\r\\n                                  <th class=\\\"text-right\\\">Ação</th>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                  <tr *ngFor=\\\"let item of produtosComposicoes\\\">\\r\\n                                    <td class=\\\"text-left\\\">\\r\\n                                      <div>{{item.nmProdutoComposicao}}</div>\\r\\n                                    </td>\\r\\n                                    <td class=\\\"text-right\\\">\\r\\n                                      {{item?.qtUtilizada}} - {{item.nmUnidadeMedida}}\\r\\n                                    </td>\\r\\n                                    <td class=\\\"text-center\\\">\\r\\n                                      <simnao valor={{item.mostrarUnidade}}></simnao>\\r\\n                                    </td>\\r\\n\\r\\n\\r\\n                                    <td class=\\\"text-right\\\">\\r\\n                                      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary cursor-hands\\\" (click)=\\\"composicaoModal.showAlteracao(item)\\\">\\r\\n                                        <i class=\\\"fa fa fa-edit\\\"> </i>\\r\\n                                      </button>\\r\\n                                      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger cursor-hands\\\"  (click)=\\\"excluirItem(item)\\\">\\r\\n                                        <i class=\\\"fa fa-eraser\\\"> </i>\\r\\n                                      </button>\\r\\n                                    </td>\\r\\n                                  </tr>\\r\\n                                </tbody>\\r\\n                              </table>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </tab>\\r\\n                  <tab>\\r\\n                    <ng-template tabHeading>\\r\\n                      <i class=\\\"icon-pie-chart\\\"></i> Inf. adicionais\\r\\n                    </ng-template>\\r\\n                    <div [ngClass]=\\\"aplicarCssGroup(formulario.get('dsUrlBlog'))\\\">\\r\\n                      <label for=\\\"nome\\\">Url blog de receitas</label>\\r\\n                      <input #campoNome type=\\\"text\\\" [ngClass]=\\\"aplicarCssForm(formulario.get('dsUrlBlog'))\\\" name=\\\"urlBlog\\\" maxlength=\\\"120\\\" placeholder=\\\"url do blog\\\"\\r\\n                        formControlName=\\\"dsUrlBlog\\\">\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                      <label for=\\\"dsInfoComplementar\\\">Informações extra</label>\\r\\n                      <textarea type=\\\"textarea\\\" maxlength=\\\"200\\\" rows=\\\"7\\\" [ngClass]=\\\"aplicarCssForm(formulario.get('dsInfoComplementar'))\\\" name=\\\"dsInfoComplementar\\\"\\r\\n                        placeholder=\\\"Digite as informações extra sobre o produto\\\" formControlName=\\\"dsInfoComplementar\\\"></textarea>\\r\\n                    </div>\\r\\n                  </tab>\\r\\n                  <tab>\\r\\n                    <ng-template tabHeading>\\r\\n                      <i class=\\\"icon-pie-chart\\\"></i> Inf nutricionais\\r\\n                    </ng-template>\\r\\n                    <div [ngClass]=\\\"aplicarCssGroupRow(formulario.get('qtEmcada'))\\\">\\r\\n                      <label class=\\\"col-sm-2 form-control-label\\\">Quantidade</label>\\r\\n                      <div class=\\\"col-sm-2\\\">\\r\\n                        <input numberOnly type=\\\"text\\\" formControlName=\\\"qtEmcada\\\" class=\\\"form-control input\\\" name=\\\"qtEmcada\\\" formControlName=\\\"qtEmcada\\\"\\r\\n                          maxlength=\\\"3\\\">\\r\\n                      </div>\\r\\n                      <div class=\\\"col-sm-4\\\">\\r\\n                        <ng-select [multiple]=\\\"false\\\" formControlName=\\\"emCada\\\" [items]=\\\"comboUnidadesEmCasa\\\" placeholder=\\\"{{label.selecione}}\\\">\\r\\n                        </ng-select>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"card\\\">\\r\\n                      <div class=\\\"card-header\\\">\\r\\n                        <strong>Tabela nutricional</strong>\\r\\n                        <div class=\\\"card-actions\\\">\\r\\n                          <button type=\\\"button\\\" (click)=\\\"InfoNutricionalModal.show()\\\">\\r\\n                            <i class=\\\"icon-plus\\\"></i>\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"card-block\\\" *ngIf=\\\"produtosInfoNutricionais?.length > 0\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n\\r\\n                          <table class=\\\"table table-striped\\\">\\r\\n                            <thead>\\r\\n                              <th class=\\\"text-left\\\">Descrição</th>\\r\\n                              <th class=\\\"text-right\\\">Quantidade</th>\\r\\n                              <th class=\\\"text-right\\\">Ação</th>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                              <tr *ngFor=\\\"let item of produtosInfoNutricionais\\\">\\r\\n                                <td class=\\\"text-left\\\">\\r\\n                                  <div>{{item.dsInfoNutricional}}</div>\\r\\n                                </td>\\r\\n                                <td class=\\\"text-right\\\">\\r\\n                                  {{item?.qtUtilizada}} - {{item.sgUnidadeMedida}}\\r\\n                                </td>\\r\\n                                <td class=\\\"text-right\\\">\\r\\n                                  <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary cursor-hands\\\" (click)=\\\"InfoNutricionalModal.showAlteracao(item)\\\">\\r\\n                                    <i class=\\\"fa fa fa-edit\\\"> </i>\\r\\n                                  </button>\\r\\n                                  <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger cursor-hands\\\"  (click)=\\\"excluirItemInfoNutriciobnal(item)\\\">\\r\\n                                    <i class=\\\"fa fa-eraser\\\"> </i>\\r\\n                                  </button>\\r\\n                                </td>\\r\\n                              </tr>\\r\\n                            </tbody>\\r\\n                          </table>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </tab>\\r\\n                </tabset>\\r\\n              </form>\\r\\n\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"card-footer\\\">\\r\\n            <div style=\\\"float: right;\\\">\\r\\n              <button class=\\\"btn btn-md btn-default\\\" (click)=\\\"voltar()\\\">\\r\\n                <i class=\\\"fa fa-history\\\"></i> {{btn.btnVoltar}}\\r\\n              </button>\\r\\n              <button type=\\\"button\\\" [disabled]=\\\"!formulario.valid\\\" class=\\\"btn btn-md btn-success\\\" (click)=\\\"modalConfirmProduto.show();\\\">\\r\\n                <i class=\\\"fa fa-save\\\"> </i> {{btn.btnSalvar}}\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <confirm-popup-modal #modalConfirmProduto popupStyle=\\\"primary\\\" (onClickConfirm)=\\\"confirmar(formulario.value)\\\">\\r\\n    <strong>Confirma a inclusão do Produto?</strong>\\r\\n  </confirm-popup-modal>\\r\\n\\r\\n  <composicao-produto-popup-modal #composicaoModal (onClickConfirm)=\\\"confirmarCompProd($event)\\\"></composicao-produto-popup-modal>\\r\\n  <info-nutricional-produto-popup-modal #InfoNutricionalModal (onClickConfirm)=\\\"confirmarInfoNutricional($event)\\\"></info-nutricional-produto-popup-modal>\\r\\n  <!-- \\r\\n  -->\\r\\n  \\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/cadastros/produto/create/create-produto.component.html\n// module id = ./src/app/pages/cadastros/produto/create/create-produto.component.html\n// module chunks = produto.module","module.exports = \".img-avatar-160 {\\n  height: 160px;\\n  width: 160px;\\n  margin: 20px auto 10px;\\n  border-radius: 50em; }\\n\\n.modal-dialog {\\n  padding-top: 10%; }\\n\\n.table th, .table td {\\n  padding: 0.20rem; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/cadastros/produto/create/create-produto.component.scss\n// module id = ./src/app/pages/cadastros/produto/create/create-produto.component.scss\n// module chunks = produto.module","import { TrataErrorService } from 'services/trata-error.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\n\r\nimport { ProdutoDTO } from 'models/domain/produto.dto';\r\nimport { ProdutoService } from './../produto.service';\r\nimport { CategoriaService } from './../../../config/categoria/categoria.service';\r\nimport { AbstractProdutoComponent } from '../abstract-produto.component';\r\nimport { EventEmitterService } from 'app/shared/event/event-emitter.services';\r\nimport { UnidadeMedidaService } from '../../../config/unidademedida/unidade-medida.service';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  templateUrl: './create-produto.component.html',\r\n  styleUrls: ['./create-produto.component.scss']\r\n})\r\nexport class CreateProdutoComponent extends AbstractProdutoComponent implements OnInit {\r\n\r\n\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    public location: Location,\r\n    public categoriaService: CategoriaService,\r\n    public unidadeService: UnidadeMedidaService,\r\n    public produtoService: ProdutoService,\r\n    public router: Router) {\r\n    super(fb, location, categoriaService, unidadeService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.criarFormulario();\r\n    this.carregarCombosProduto();\r\n  }\r\n\r\n  confirmar(value: any) {\r\n    let prod = this.preencharProduto(value);\r\n    this.produtoService.salvar(prod)\r\n      .subscribe(\r\n        response => {\r\n          EventEmitterService.emitirMensagemToasterSucesso('Produtos', 'Produto incluído com sucesso!!!');\r\n          this.router.navigate(['/produtos/listar']);\r\n        }, error => TrataErrorService.tratarError(error));\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/cadastros/produto/create/create-produto.component.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n          <strong>Produto</strong>\\r\\n          <small> - alteração do produto</small>\\r\\n        </div>\\r\\n  \\r\\n        <div class=\\\"card-block\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-4 col-md-4\\\">\\r\\n                <div class=\\\"card\\\">\\r\\n                  <div class=\\\"card-header\\\">\\r\\n                    <strong>Imagens do produto</strong>\\r\\n                  </div>\\r\\n                  <div class=\\\"card-block\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <img [src]=\\\"urlFoto\\\" class=\\\"img-avatar-160 center-block \\\" alt=\\\"avatar\\\">\\r\\n                    </div>\\r\\n  \\r\\n                  </div>\\r\\n                  <div class=\\\"card-footer\\\">\\r\\n                    <upload-imagem altura=\\\"140\\\" largura=\\\"140\\\" botaoIcone=\\\"fa fa-save\\\" botaoTitulo=\\\"Alterar imagem\\\" botaoCss=\\\"btn btn-md btn-primary btn-block\\\"\\r\\n                      (onSelecionarImagem)=\\\"mudarImage($event)\\\">\\r\\n                    </upload-imagem>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <!--/.col-->\\r\\n  \\r\\n              <div class=\\\"col-md-8 col-sm-8\\\">\\r\\n                <form [formGroup]=\\\"formulario\\\">\\r\\n                  <tabset>\\r\\n                    <tab>\\r\\n                      <ng-template tabHeading>\\r\\n                        <i class=\\\"icon-list\\\"></i> Dados &nbsp;\\r\\n                      </ng-template>\\r\\n                      <div [ngClass]=\\\"aplicarCssGroupRow(formulario.get('nmProduto'))\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\">Nome</label>\\r\\n                        <div class=\\\"col-sm-10\\\">\\r\\n                          <input [autofoco]=\\\"true\\\" type=\\\"text\\\" class=\\\"form-control input\\\" [ngClass]=\\\"aplicarCssForm(formulario.get('nmProduto'))\\\" name=\\\"nmProduto\\\"\\r\\n                            maxlength=\\\"50\\\" placeholder=\\\"Digite o nome o produto\\\" formControlName=\\\"nmProduto\\\">\\r\\n                          <alert-mensagem [mostrarErro]=\\\"isInvalido(formulario.get('nmProduto'))\\\" titulo=\\\"Erro:\\\" mensagem=\\\"o campo Nome do produto deve ter entre 4 a 50 caracteres\\\">\\r\\n                          </alert-mensagem>\\r\\n                        </div>\\r\\n                      </div>\\r\\n  \\r\\n  \\r\\n                      <div [ngClass]=\\\"aplicarCssGroupRow(formulario.get('categoria'))\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\">Categoria</label>\\r\\n                        <div class=\\\"col-sm-4\\\" >\\r\\n                          <ng-select [multiple]=\\\"false\\\" formControlName=\\\"categoria\\\" [items]=\\\"comboCategorias\\\" placeholder=\\\"{{label.selecione}}\\\" >\\r\\n                          </ng-select>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div [ngClass]=\\\"aplicarCssGroupRow(formulario.get('unidadeVenda'))\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\">Unid. de venda </label>\\r\\n                        <div class=\\\"col-sm-4\\\">\\r\\n                          <ng-select [multiple]=\\\"false\\\" formControlName=\\\"unidadeVenda\\\" [items]=\\\"comboUnidades\\\" placeholder=\\\"{{label.selecione}}\\\">\\r\\n                          </ng-select>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div [ngClass]=\\\"aplicarCssGroupRow(formulario.get('vlVenda'))\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\">Valor venda</label>\\r\\n                        <div class=\\\"col-sm-4\\\">\\r\\n                          <input type=\\\"text\\\" currencyMask [options]=\\\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\\\" class=\\\"form-control input\\\" [ngClass]=\\\"aplicarCssForm(formulario.get('vlVenda'))\\\"\\r\\n                            name=\\\"vlVenda\\\" maxlength=\\\"10\\\" formControlName=\\\"vlVenda\\\">\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div [ngClass]=\\\"aplicarCssGroupRow(formulario.get('vlCompra'))\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\">Valor compra</label>\\r\\n                        <div class=\\\"col-sm-4\\\">\\r\\n                          <input type=\\\"text\\\" currencyMask [options]=\\\"{ prefix: 'R$ ', thousands: '.', decimal: ',' }\\\" class=\\\"form-control input\\\" [ngClass]=\\\"aplicarCssForm(formulario.get('vlCompra'))\\\"\\r\\n                            name=\\\"vlCompra\\\" maxlength=\\\"10\\\" formControlName=\\\"vlCompra\\\" [ngClass]=\\\"aplicarCssForm(formulario.get('vlCompra'))\\\">\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div [ngClass]=\\\"aplicarCssGroupRow(formulario.get('qtMinimaEstoque'))\\\">\\r\\n                        <label class=\\\"col-sm-3 form-control-label\\\">Qtd minima em estoque</label>\\r\\n                        <div class=\\\"col-sm-3\\\">\\r\\n                          <input numberOnly type=\\\"text\\\" formControlName=\\\"qtMinimaEstoque\\\" class=\\\"form-control input-sm\\\" name=\\\"qtMinimaEstoque\\\" formControlName=\\\"qtMinimaEstoque\\\"\\r\\n                            maxlength=\\\"4\\\" [ngClass]=\\\"aplicarCssForm(formulario.get('qtMinimaEstoque'))\\\">\\r\\n                        </div>\\r\\n                      </div>\\r\\n  \\r\\n                      <div [ngClass]=\\\"aplicarCssGroupRow(formulario.get('qtAcompanhamento'))\\\">\\r\\n                        <label class=\\\"col-sm-3 form-control-label\\\">Qtd acompanhamentos</label>\\r\\n                        <div class=\\\"col-sm-3\\\">\\r\\n                          <input numberOnly type=\\\"text\\\" formControlName=\\\"qtAcompanhamento\\\" class=\\\"form-control input-sm\\\" name=\\\"qtAcompanhamento\\\" formControlName=\\\"qtAcompanhamento\\\"\\r\\n                            maxlength=\\\"2\\\" [ngClass]=\\\"aplicarCssForm(formulario.get('qtAcompanhamento'))\\\">\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div [ngClass]=\\\"aplicarCssGroupRow(formulario.get('nrCodigoBarra'))\\\">\\r\\n                        <label class=\\\"col-sm-3 form-control-label\\\">Cód barra</label>\\r\\n                        <div class=\\\"col-sm-3\\\">\\r\\n                          <input numberOnly type=\\\"text\\\" formControlName=\\\"nrCodigoBarra\\\" class=\\\"form-control input\\\" name=\\\"codigoBarra\\\" formControlName=\\\"nrCodigoBarra\\\"\\r\\n                            maxlength=\\\"13\\\" [ngClass]=\\\"aplicarCssForm(formulario.get('nrCodigoBarra'))\\\">\\r\\n                        </div>\\r\\n                      </div>\\r\\n  \\r\\n                    </tab>\\r\\n                    <tab>\\r\\n                      <ng-template tabHeading>\\r\\n                        <i class=\\\"icon-calculator\\\"></i> Composição &nbsp;\\r\\n                      </ng-template>\\r\\n                      <div class=\\\"from-group row\\\">\\r\\n  \\r\\n                        <div class=\\\"col-sm-12\\\">\\r\\n                          <div class=\\\"card\\\">\\r\\n                            <div class=\\\"card-header\\\">\\r\\n                              <strong>Composição do produto</strong>\\r\\n                              <div class=\\\"card-actions\\\">\\r\\n                                <button type=\\\"button\\\" (click)=\\\"composicaoModal.show()\\\">\\r\\n                                  <i class=\\\"icon-plus\\\"></i>\\r\\n                                </button>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"card-block\\\" *ngIf=\\\"produtosComposicoes?.length > 0\\\">\\r\\n                              <div class=\\\"row\\\">\\r\\n  \\r\\n                                <table class=\\\"table table-striped\\\">\\r\\n                                  <thead>\\r\\n                                    <th class=\\\"text-left\\\">Produto</th>\\r\\n                                    <th class=\\\"text-right\\\">Quantidade</th>\\r\\n                                    <th class=\\\"text-center\\\">Mostrar</th>\\r\\n                                    <th class=\\\"text-right\\\">Ação</th>\\r\\n                                  </thead>\\r\\n                                  <tbody>\\r\\n                                    <tr *ngFor=\\\"let item of produtosComposicoes\\\">\\r\\n                                      <td class=\\\"text-left\\\">\\r\\n                                        <div>{{item.nmProdutoComposicao}}</div>\\r\\n                                      </td>\\r\\n                                      <td class=\\\"text-right\\\">\\r\\n                                        {{item?.qtUtilizada}} - {{item.nmUnidadeMedida}}\\r\\n                                      </td>\\r\\n                                      <td class=\\\"text-center\\\">\\r\\n                                        <simnao valor={{item.mostrarUnidade}}></simnao>\\r\\n                                      </td>\\r\\n  \\r\\n  \\r\\n                                      <td class=\\\"text-right\\\">\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary cursor-hands\\\" (click)=\\\"composicaoModal.showAlteracao(item)\\\">\\r\\n                                          <i class=\\\"fa fa fa-edit\\\"> </i>\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger cursor-hands\\\"  (click)=\\\"excluirItem(item)\\\">\\r\\n                                          <i class=\\\"fa fa-eraser\\\"> </i>\\r\\n                                        </button>\\r\\n                                      </td>\\r\\n                                    </tr>\\r\\n                                  </tbody>\\r\\n                                </table>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </tab>\\r\\n                    <tab>\\r\\n                      <ng-template tabHeading>\\r\\n                        <i class=\\\"icon-pie-chart\\\"></i> Inf. adicionais\\r\\n                      </ng-template>\\r\\n                      <div [ngClass]=\\\"aplicarCssGroup(formulario.get('dsUrlBlog'))\\\">\\r\\n                        <label for=\\\"nome\\\">Url blog de receitas</label>\\r\\n                        <input #campoNome type=\\\"text\\\" [ngClass]=\\\"aplicarCssForm(formulario.get('dsUrlBlog'))\\\" name=\\\"urlBlog\\\" maxlength=\\\"120\\\" placeholder=\\\"url do blog\\\"\\r\\n                          formControlName=\\\"dsUrlBlog\\\">\\r\\n                      </div>\\r\\n  \\r\\n                      <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"dsInfoComplementar\\\">Informações extra</label>\\r\\n                        <textarea type=\\\"textarea\\\" maxlength=\\\"200\\\" rows=\\\"7\\\" [ngClass]=\\\"aplicarCssForm(formulario.get('dsInfoComplementar'))\\\" name=\\\"dsInfoComplementar\\\"\\r\\n                          placeholder=\\\"Digite as informações extra sobre o produto\\\" formControlName=\\\"dsInfoComplementar\\\"></textarea>\\r\\n                      </div>\\r\\n                    </tab>\\r\\n                    <tab>\\r\\n                      <ng-template tabHeading>\\r\\n                        <i class=\\\"icon-pie-chart\\\"></i> Inf nutricionais\\r\\n                      </ng-template>\\r\\n                      <div [ngClass]=\\\"aplicarCssGroupRow(formulario.get('qtEmcada'))\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\">Quantidade</label>\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                          <input numberOnly type=\\\"text\\\" formControlName=\\\"qtEmcada\\\" class=\\\"form-control input\\\" name=\\\"qtEmcada\\\" formControlName=\\\"qtEmcada\\\"\\r\\n                            maxlength=\\\"3\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-4\\\">\\r\\n                          <ng-select [multiple]=\\\"false\\\" formControlName=\\\"emCada\\\" [items]=\\\"comboUnidadesEmCasa\\\" placeholder=\\\"{{label.selecione}}\\\">\\r\\n                          </ng-select>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-header\\\">\\r\\n                          <strong>Tabela nutricional</strong>\\r\\n                          <div class=\\\"card-actions\\\">\\r\\n                            <button type=\\\"button\\\" (click)=\\\"InfoNutricionalModal.show()\\\">\\r\\n                              <i class=\\\"icon-plus\\\"></i>\\r\\n                            </button>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-block\\\" *ngIf=\\\"produtosInfoNutricionais?.length > 0\\\">\\r\\n                          <div class=\\\"row\\\">\\r\\n  \\r\\n                            <table class=\\\"table table-striped\\\">\\r\\n                              <thead>\\r\\n                                <th class=\\\"text-left\\\">Descrição</th>\\r\\n                                <th class=\\\"text-right\\\">Quantidade</th>\\r\\n                                <th class=\\\"text-right\\\">Ação</th>\\r\\n                              </thead>\\r\\n                              <tbody>\\r\\n                                <tr *ngFor=\\\"let item of produtosInfoNutricionais\\\">\\r\\n                                  <td class=\\\"text-left\\\">\\r\\n                                    <div>{{item.dsInfoNutricional}}</div>\\r\\n                                  </td>\\r\\n                                  <td class=\\\"text-right\\\">\\r\\n                                    {{item?.qtUtilizada}} - {{item.sgUnidadeMedida}}\\r\\n                                  </td>\\r\\n                                  <td class=\\\"text-right\\\">\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary cursor-hands\\\" (click)=\\\"InfoNutricionalModal.showAlteracao(item)\\\">\\r\\n                                      <i class=\\\"fa fa fa-edit\\\"> </i>\\r\\n                                    </button>\\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger cursor-hands\\\"  (click)=\\\"excluirItemInfoNutriciobnal(item)\\\">\\r\\n                                      <i class=\\\"fa fa-eraser\\\"> </i>\\r\\n                                    </button>\\r\\n                                  </td>\\r\\n                                </tr>\\r\\n                              </tbody>\\r\\n                            </table>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </tab>\\r\\n                  </tabset>\\r\\n                </form>\\r\\n  \\r\\n              </div>\\r\\n  \\r\\n            </div>\\r\\n            <div class=\\\"card-footer\\\">\\r\\n              <div style=\\\"float: right;\\\">\\r\\n                <button class=\\\"btn btn-md btn-default\\\" (click)=\\\"voltar()\\\">\\r\\n                  <i class=\\\"fa fa-history\\\"></i> {{btn.btnVoltar}}\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" [disabled]=\\\"!formulario.valid\\\" class=\\\"btn btn-md btn-success\\\" (click)=\\\"modalConfirmProduto.show();\\\">\\r\\n                  <i class=\\\"fa fa-save\\\"> </i> {{btn.btnSalvar}}\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  \\r\\n    <confirm-popup-modal #modalConfirmProduto popupStyle=\\\"primary\\\" (onClickConfirm)=\\\"confirmar(formulario.value)\\\">\\r\\n      <strong>Confirma a inclusão do Produto?</strong>\\r\\n    </confirm-popup-modal>\\r\\n  \\r\\n    <composicao-produto-popup-modal #composicaoModal (onClickConfirm)=\\\"confirmarCompProd($event)\\\"></composicao-produto-popup-modal>\\r\\n    <info-nutricional-produto-popup-modal #InfoNutricionalModal (onClickConfirm)=\\\"confirmarInfoNutricional($event)\\\"></info-nutricional-produto-popup-modal>\\r\\n    <!-- \\r\\n    -->\\r\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/cadastros/produto/edit/edit-produtos.component.html\n// module id = ./src/app/pages/cadastros/produto/edit/edit-produtos.component.html\n// module chunks = produto.module","module.exports = \".img-avatar-160 {\\n  height: 160px;\\n  width: 160px;\\n  margin: 20px auto 10px;\\n  border-radius: 50em; }\\n\\n.modal-dialog {\\n  padding-top: 10%; }\\n\\n.table th, .table td {\\n  padding: 0.20rem; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/cadastros/produto/edit/edit-produtos.component.scss\n// module id = ./src/app/pages/cadastros/produto/edit/edit-produtos.component.scss\n// module chunks = produto.module","import { ImageService } from './../../../../../services/image.service';\r\nimport { UnidadeMedidaService } from './../../../config/unidademedida/unidade-medida.service';\r\nimport { TrataErrorService } from 'services/trata-error.service';\r\nimport { ComboDTO } from 'models/domain/combo.dto';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { ProdutoDTO } from 'models/domain/produto.dto';\r\nimport { ProdutoService } from './../produto.service';\r\nimport { CategoriaService } from './../../../config/categoria/categoria.service';\r\nimport { AbstractProdutoComponent } from '../abstract-produto.component';\r\nimport { EventEmitterService } from 'app/shared/event/event-emitter.services';\r\n\r\n\r\n@Component({\r\n  templateUrl: './edit-produtos.component.html',\r\n  styleUrls: ['./edit-produtos.component.scss']\r\n})\r\nexport class EditProdutosComponent extends AbstractProdutoComponent implements OnInit {\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    public route: ActivatedRoute,\r\n    public location: Location,\r\n    public categoriaService: CategoriaService,\r\n    public unidadeService: UnidadeMedidaService,\r\n    public produtoService: ProdutoService,\r\n    public image: ImageService,\r\n    public router: Router) {\r\n    super(fb, location, categoriaService, unidadeService);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.criarFormulario();\r\n    this.carregarCombosProduto();\r\n    this.route.params.forEach((params: Params) => {\r\n      let id = params['id'];\r\n      this.produtoService.findById(id).subscribe(\r\n        resp => {\r\n          let produto = resp as ProdutoDTO;\r\n          this.atualizarForm(produto);\r\n          this.image.getImageFromBucket(produto.id, 'PRD')\r\n          .subscribe(\r\n            res =>  this.urlFoto = this.image.getImage(produto.id, 'PRD') ,\r\n            error =>  this.urlFoto = this.urlFotoAvatar \r\n          )\r\n        }\r\n        , error => TrataErrorService.tratarError(error)\r\n      )\r\n    });\r\n\r\n  }\r\n\r\n\r\n  confirmar(value: any) {\r\n    let prod = this.preencharProduto(value);\r\n    this.produtoService.atualizar(prod)\r\n      .subscribe(\r\n        response => {\r\n          EventEmitterService.emitirMensagemToasterSucesso('Produtos', 'Produto alterado com sucesso!!!');\r\n          this.router.navigate(['/produtos/listar']);\r\n        },\r\n        error => TrataErrorService.tratarError(error));\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/cadastros/produto/edit/edit-produtos.component.ts","module.exports = \"<div class=\\\"col-md-1\\\"></div>\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-success\\\" [routerLink]=\\\"['/produtos/novo']\\\">\\r\\n    <i class=\\\"icon-plus\\\"></i> Novo\\r\\n</button>\\r\\n<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <i class=\\\"fa fa-align-justify\\\"></i> Listagem de produtos\\r\\n        </div>\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-2 col md-4\\\">Categorias:</div>\\r\\n                <div class=\\\"col-sm-4 col-md-2\\\" *ngFor=\\\"let item of categorias\\\">\\r\\n                    <input type=\\\"checkbox\\\" id=\\\"checkbox1\\\" name=\\\"checkbox1\\\" (click)=\\\"selecionarCheck($event.target.checked, item)\\\"> {{item.nmCategoria}}\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"card-block\\\">\\r\\n        <table class=\\\"table table-striped\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th class=\\\"text-center\\\" style=\\\"width: 5%\\\">\\r\\n                        <i class=\\\"icon-people\\\"></i>\\r\\n                    </th>\\r\\n                    <th>\\r\\n                        <div style=\\\"width: 40%\\\">\\r\\n                            Descrição do produto\\r\\n                        </div>\\r\\n                    </th>\\r\\n                    <th>\\r\\n                        <div style=\\\"width: 10%\\\" class=\\\"hidden-md-down\\\">\\r\\n                            Categoria\\r\\n                        </div>\\r\\n                    </th>\\r\\n                    <th>\\r\\n                        <div style=\\\"width: 10%\\\" class=\\\"hidden-md-down\\\" >\\r\\n                            Situação\\r\\n                        </div>\\r\\n                    </th>\\r\\n                    <th>\\r\\n                        <div style=\\\"width: 10%\\\" >\\r\\n                            Preço\\r\\n                        </div>\\r\\n                    </th>\\r\\n                    <th>\\r\\n                        <div style=\\\"width: 15%\\\">\\r\\n                            Ação\\r\\n                        </div>\\r\\n                    </th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let item of items\\\">\\r\\n                    <td >\\r\\n                        <div class=\\\"avatar\\\">\\r\\n                            <foto-uri id=\\\"{{item.id}}\\\" modulo=\\\"PRD\\\" classCss=\\\"img-avatar\\\" alt=\\\"Avatar\\\"></foto-uri>\\r\\n                        </div>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-left\\\">\\r\\n                        <div class=\\\"margin-top\\\">{{item.nmProduto}}</div>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <div class=\\\"margin-top hidden-md-down\\\" >\\r\\n                            {{item?.categoria?.nmCategoria}}\\r\\n                        </div>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <div class=\\\"margin-top hidden-md-down\\\">\\r\\n                            <status status={{item.status}}></status>\\r\\n                        </div>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-right \\\">\\r\\n                        <div class=\\\"margin-top\\\">{{item.vlVenda | currency:'BRL':true}}</div>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-right\\\">\\r\\n                        <form-buttons (onClickBtnEditar)=\\\"alterarProduto(item)\\\" (onClickBtnExcluir)=\\\"selecionarItem(item)\\\" (onClickBtnAlterarStatus)=\\\"selecionarItemChangeStatus(item)\\\">\\r\\n                        </form-buttons>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<confirm-popup-modal #modalExcluirProduto popupStyle=\\\"danger\\\" (onClickConfirm)=\\\"excluirCategoria()\\\">\\r\\n    <strong>Deseja excluir o produto?</strong>\\r\\n</confirm-popup-modal>\\r\\n\\r\\n<confirm-popup-modal #modalChangeSatusProduto popupStyle=\\\"danger\\\" (onClickConfirm)=\\\"changeStatus()\\\">\\r\\n    <strong>Deseja alterar o status do produto?</strong>\\r\\n</confirm-popup-modal>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/cadastros/produto/listar/listar-produtos.component.html\n// module id = ./src/app/pages/cadastros/produto/listar/listar-produtos.component.html\n// module chunks = produto.module","module.exports = \".table th, .table td {\\n  padding: 0.25rem; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/cadastros/produto/listar/listar-produtos.component.scss\n// module id = ./src/app/pages/cadastros/produto/listar/listar-produtos.component.scss\n// module chunks = produto.module","import { CategoriaDTO } from './../../../../../models/domain/categoria.dto';\r\nimport { EventEmitterService } from 'app/shared/event/event-emitter.services';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { API_CONFIG } from 'config/core/api.config';\r\nimport { ProdutoService } from '../produto.service';\r\nimport { AbstractBaseComponent } from 'config/core/abstract-base.component';\r\nimport { ProdutoDTO } from 'models/domain/produto.dto';\r\nimport { TrataErrorService } from 'services/trata-error.service';\r\nimport { CategoriaService } from '../../../config/categoria/categoria.service';\r\n\r\n@Component({\r\n  templateUrl: './listar-produtos.component.html',\r\n  styleUrls: ['./listar-produtos.component.scss']\r\n})\r\nexport class ListarProdutosComponent extends AbstractBaseComponent implements OnInit {\r\n\r\n  @ViewChild('modalExcluirProduto') popupExclusao;\r\n  @ViewChild('modalChangeSatusProduto') popupChangeStatus;\r\n  bucketUrl: string = API_CONFIG.bucketBaseUrl;\r\n  produto: ProdutoDTO;\r\n\r\n  items: ProdutoDTO[];\r\n  categorias: CategoriaDTO[] = [];\r\n  categoraisSelecionada: string[] = [];\r\n\r\n\r\n  constructor(\r\n    public produtoService: ProdutoService,\r\n    public categoriaService: CategoriaService,\r\n    public router: Router) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.carregarDados();\r\n  }\r\n\r\n  public selecionarCheck(acao: boolean, item: ProdutoDTO) {\r\n    if (acao) {\r\n      this.categoraisSelecionada.push(item.id);\r\n    } else {\r\n      this.categoraisSelecionada = this.categoraisSelecionada.filter((cat: string) => cat != item.id);\r\n    }\r\n    this.carregarProdutos();\r\n  }\r\n\r\n  selecionarItem(item: ProdutoDTO) {\r\n    this.produto = item;\r\n    this.popupExclusao.show();\r\n  }\r\n\r\n  selecionarItemChangeStatus(item: ProdutoDTO) {\r\n    this.produto = item;\r\n    this.popupChangeStatus.show();\r\n  }\r\n\r\n  changeStatus() {\r\n    this.produtoService.changeStatus(this.produto)\r\n      .subscribe(res => {\r\n        EventEmitterService.emitirMensagemToasterSucesso('Produtos', 'Status do produto alterado com sucesso!!!')\r\n        this.carregarProdutos();\r\n      }, error => TrataErrorService.tratarError(error));\r\n  }\r\n\r\n  excluirCategoria() {\r\n    this.produtoService.excluir(this.produto)\r\n      .subscribe(res => {\r\n        EventEmitterService.emitirMensagemToasterSucesso('Produtos', 'Produto excluído com sucesso!!!')\r\n        this.carregarProdutos();\r\n      }, error => TrataErrorService.tratarError(error));\r\n  }\r\n\r\n  alterarProduto(produto: ProdutoDTO) {\r\n    this.router.navigate([`produtos/editar/${produto.id}`])\r\n  }\r\n\r\n  private carregarDados() {\r\n    this.categoriaService.findAll()\r\n      .subscribe(\r\n        res => {\r\n          this.categorias = res;\r\n          //for (let x of this.categorias) {\r\n            //this.categoraisSelecionada.push(x.id);\r\n          //}\r\n          this.carregarProdutos();\r\n        });\r\n  }\r\n\r\n\r\n  private carregarProdutos() {\r\n    this.produtoService.findByCategorias(this.categoraisSelecionada)\r\n      .subscribe(\r\n        res => this.items = res,\r\n        error => TrataErrorService.tratarError(error));\r\n\r\n  };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/cadastros/produto/listar/listar-produtos.component.ts","module.exports = \"<base-popup-modal [nomePopup]=\\\"nomeJanePopup\\\" #modalConfirm modalSize=\\\"md\\\" [titulo]=\\\"titulo\\\" (onClickBaseConfirm)=\\\"btnConfirmar(formProdComp.value)\\\"\\r\\n        [desabilitarBtnConfirmar]=\\\"!formProdComp.valid\\\">\\r\\n\\r\\n        <form [formGroup]=\\\"formProdComp\\\" >\\r\\n                <div [ngClass]=\\\"aplicarCssGroupRow(formProdComp.get('produtoComp'))\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" for=\\\"input-small\\\">Produto</label>\\r\\n                        <div class=\\\"col-sm-10\\\">\\r\\n                                <ng-select *ngIf=\\\"!formProdComp.get('emAlteracao').value\\\" [multiple]=\\\"false\\\" formControlName=\\\"produtoComp\\\" [items]=\\\"comboCompProdutos\\\"\\r\\n                                        placeholder=\\\"{{label.selecione}}\\\"></ng-select>\\r\\n                                <input *ngIf=\\\"formProdComp.get('emAlteracao').value\\\" type=\\\"text\\\" id=\\\"disabled-input\\\" name=\\\"disabled-input\\\" class=\\\"form-control\\\"\\r\\n                                        placeholder=\\\"Disabled\\\" disabled=\\\"\\\" value=\\\"{{formProdComp.get('produtoComp').value[0].text}}\\\">\\r\\n                        </div>\\r\\n                </div>\\r\\n                <div [ngClass]=\\\"aplicarCssGroupRow(formProdComp.get('qtUtilizada'))\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" for=\\\"input-normal\\\">Quantidade</label>\\r\\n                        <div class=\\\"col-sm-4\\\">\\r\\n                                <input #campoNome numberOnly type=\\\"text\\\" formControlName=\\\"qtUtilizada\\\" class=\\\"form-control input-sm\\\" name=\\\"qtUtilizada\\\" formControlName=\\\"qtUtilizada\\\"\\r\\n                                        maxlength=\\\"4\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-6\\\">\\r\\n                                <ng-select formControlName=\\\"unidade\\\" [items]=\\\"comboCompUnidades\\\" placeholder=\\\"{{label.selecione}}\\\"></ng-select>\\r\\n                        </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\">Mostrar</label>\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                                <label class=\\\"switch switch-lg switch-text switch-primary\\\">\\r\\n                                        <input #checkMostrar type=\\\"checkbox\\\" class=\\\"switch-input\\\" [checked]=\\\"checkMostrar\\\" (change)=\\\"compProdCheckMostrar(checkMostrar.checked)\\\"\\r\\n                                        />\\r\\n                                        <span class=\\\"switch-label\\\" data-on=\\\"sim\\\" data-off=\\\"não\\\"></span>\\r\\n                                        <span class=\\\"switch-handle\\\"></span>\\r\\n                                </label>\\r\\n                        </div>\\r\\n                </div>\\r\\n        </form>\\r\\n</base-popup-modal>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/cadastros/produto/popup/composicao-produto-popup-modal.component.html\n// module id = ./src/app/pages/cadastros/produto/popup/composicao-produto-popup-modal.component.html\n// module chunks = produto.module","module.exports = \".modal-dialog {\\n  padding-top: 10%; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/cadastros/produto/popup/composicao-produto-popup-modal.component.scss\n// module id = ./src/app/pages/cadastros/produto/popup/composicao-produto-popup-modal.component.scss\n// module chunks = produto.module","import { TrataErrorService } from './../../../../../services/trata-error.service';\r\nimport { Component, Input, Output, ViewChild, OnInit, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n\r\nimport { ProdutoComposicaoDTO } from 'models/domain/produto-composicao.dto';\r\nimport { ModalDirective } from 'ng2-bootstrap/modal/modal.component';\r\nimport { ComboDTO } from './../../../../../models/domain/combo.dto';\r\nimport { CategoriaService } from './../../../config/categoria/categoria.service';\r\nimport { ProdutoService } from './../produto.service';\r\nimport { EventEmitterService } from './../../../../shared/event/event-emitter.services';\r\n\r\nimport { AbstractPopupComponent } from 'config/core/abstract-popup.component';\r\nimport { UnidadeMedidaService } from './../../../config/unidademedida/unidade-medida.service';\r\n\r\n\r\n@Component({\r\n  selector: 'composicao-produto-popup-modal',\r\n  styleUrls: ['./composicao-produto-popup-modal.component.scss'],\r\n  templateUrl: './composicao-produto-popup-modal.component.html'\r\n\r\n})\r\nexport class ComposicaoProdutoPopupModalComponent extends AbstractPopupComponent implements OnInit {\r\n\r\n  checkMostrar: boolean = true;\r\n  comboCompUnidades: ComboDTO[] = []\r\n  comboCompProdutos: ComboDTO[] = []\r\n  formProdComp: FormGroup;\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    public unidadeService: UnidadeMedidaService,\r\n    public produtoService: ProdutoService) {\r\n    super('composicaoProdutoPopupModal');\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.criarFormProdComp();\r\n    this.produtoService.findAllProdutoInterno()\r\n      .subscribe(\r\n        response => this.comboCompProdutos = this.preencharCombo(response, 'id', 'nmProduto'),\r\n        error => TrataErrorService.tratarError(error)\r\n      );\r\n    this.unidadeService.findAllAtivo()\r\n      .subscribe(\r\n          response => this.comboCompUnidades = this.preencharCombo(response, 'id', 'sgUnidadeMedida'),\r\n          error => TrataErrorService.tratarError(error)\r\n      )\r\n  }\r\n\r\n  show() {\r\n    this.criarFormProdComp();\r\n    this.showPopup(\"Inclusão de produto na composição\")\r\n  }\r\n\r\n  showAlteracao(item: ProdutoComposicaoDTO) {\r\n    this.alterarProdutoComp(item)\r\n    this.showPopup(\"Alteração de produto na composição\");\r\n  }\r\n\r\n  btnConfirmar(value: any) {\r\n    EventEmitterService.closePopup(this.nomeJanePopup);\r\n    this.onClickConfirm.emit(value);\r\n  }\r\n\r\n  criarFormProdComp() {\r\n    this.formProdComp = this.fb.group({\r\n      idProdutoPai: [],\r\n      produtoComp: ['', Validators.required],\r\n      unidade: ['', Validators.required],\r\n      qtUtilizada: ['', Validators.required],\r\n      mostrarUnidade: ['S'],\r\n      emAlteracao: [false]\r\n    })\r\n  }\r\n\r\n  compProdCheckMostrar(valor: boolean) {\r\n    this.formProdComp.patchValue({\r\n      mostrarUnidade: valor ? 'S' : 'N'\r\n    });\r\n  }\r\n\r\n\r\n  private alterarProdutoComp(item: ProdutoComposicaoDTO) {\r\n    this.formProdComp.patchValue({\r\n      produtoComp: [{ id: item.idProdutoComposicao, text: item.nmProdutoComposicao }],\r\n      unidade: [{ id: item.idUnidadeMedida, text: item.nmUnidadeMedida }],\r\n      qtUtilizada: item.qtUtilizada,\r\n      mostrarUnidade: item.mostrarUnidade,\r\n      emAlteracao: true\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/cadastros/produto/popup/composicao-produto-popup-modal.component.ts","module.exports = \"<base-popup-modal [nomePopup]=\\\"nomeJanePopup\\\" #modalConfirm modalSize=\\\"md\\\" [titulo]=\\\"titulo\\\" (onClickBaseConfirm)=\\\"btnConfirmar(formProdInfo.value)\\\"\\r\\n        [desabilitarBtnConfirmar]=\\\"!formProdInfo.valid\\\">\\r\\n\\r\\n        <form [formGroup]=\\\"formProdInfo\\\" >\\r\\n                \\r\\n                <div [ngClass]=\\\"aplicarCssGroupRow(formProdInfo.get('infoNutricional'))\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" for=\\\"input-small\\\">Informação</label>\\r\\n                        <div class=\\\"col-sm-10\\\">\\r\\n                                <ng-select *ngIf=\\\"!formProdInfo.get('emAlteracao').value\\\" [multiple]=\\\"false\\\" formControlName=\\\"infoNutricional\\\" [items]=\\\"comboInfoNutriciais\\\"\\r\\n                                placeholder=\\\"{{label.selecione}}\\\"></ng-select>\\r\\n                                <input *ngIf=\\\"formProdInfo.get('emAlteracao').value\\\" type=\\\"text\\\" id=\\\"disabled-input\\\" name=\\\"disabled-input\\\" class=\\\"form-control\\\"\\r\\n                                placeholder=\\\"Disabled\\\" disabled=\\\"\\\" value=\\\"{{formProdInfo.get('infoNutricional').value[0].text}}\\\">\\r\\n                        </div>\\r\\n                </div>\\r\\n                <div [ngClass]=\\\"aplicarCssGroupRow(formProdInfo.get('qtUtilizada'))\\\">\\r\\n                        <label class=\\\"col-sm-2 form-control-label\\\" for=\\\"input-normal\\\">Quantidade</label>\\r\\n                        <div class=\\\"col-sm-4\\\">\\r\\n                                <input #campoNome numberOnly type=\\\"text\\\" formControlName=\\\"qtUtilizada\\\" class=\\\"form-control input-sm\\\" name=\\\"qtUtilizada\\\" formControlName=\\\"qtUtilizada\\\"\\r\\n                                maxlength=\\\"4\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-6\\\">\\r\\n                                <ng-select formControlName=\\\"unidade\\\" [items]=\\\"comboCompUnidades\\\" placeholder=\\\"{{label.selecione}}\\\"></ng-select>\\r\\n                        </div>\\r\\n                </div>\\r\\n        </form>\\r\\n</base-popup-modal>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/pages/cadastros/produto/popup/info-nutricional-produto-popup-modal.component.html\n// module id = ./src/app/pages/cadastros/produto/popup/info-nutricional-produto-popup-modal.component.html\n// module chunks = produto.module","import { ProdutoInfoNutricionalDTO } from './../../../../../models/domain/produto-info-nutricional.dto';\r\nimport { InfoNutricionalService } from './../../../config/infonutricional/info-nutricional.service';\r\nimport { TrataErrorService } from './../../../../../services/trata-error.service';\r\nimport { Component, Input, Output, ViewChild, OnInit, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n\r\nimport { ProdutoComposicaoDTO } from 'models/domain/produto-composicao.dto';\r\nimport { ModalDirective } from 'ng2-bootstrap/modal/modal.component';\r\nimport { ComboDTO } from './../../../../../models/domain/combo.dto';\r\nimport { CategoriaService } from './../../../config/categoria/categoria.service';\r\nimport { ProdutoService } from './../produto.service';\r\nimport { EventEmitterService } from './../../../../shared/event/event-emitter.services';\r\n\r\nimport { AbstractPopupComponent } from 'config/core/abstract-popup.component';\r\nimport { UnidadeMedidaService } from './../../../config/unidademedida/unidade-medida.service';\r\n\r\n\r\n@Component({\r\n  selector: 'info-nutricional-produto-popup-modal',\r\n  templateUrl: './info-nutricional-produto-popup-modal.component.html'\r\n\r\n})\r\nexport class InfoNutricionalProdutoPopupModalComponent extends AbstractPopupComponent implements OnInit {\r\n\r\n  checkMostrar: boolean = true;\r\n  comboCompUnidades: ComboDTO[] = []\r\n  comboInfoNutriciais: ComboDTO[] = []\r\n  formProdInfo: FormGroup;\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    public unidadeService: UnidadeMedidaService,\r\n    public infoService: InfoNutricionalService\r\n  ) {\r\n    super('infoNutricionalProdutoPopup');\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.criarFormProdInfo();\r\n    this.infoService.findAll()\r\n      .subscribe(\r\n        response => this.comboInfoNutriciais = this.preencharCombo(response, 'id', 'nmInfoNutricional'),\r\n        error => TrataErrorService.tratarError(error)\r\n      );\r\n\r\n    this.unidadeService.findAllAtivo()\r\n      .subscribe(\r\n        response => this.comboCompUnidades = this.preencharCombo(response, 'id', 'sgUnidadeMedida'),\r\n        error => TrataErrorService.tratarError(error)\r\n      )\r\n  }\r\n\r\n  show() {\r\n    this.criarFormProdInfo();\r\n    this.showPopup(\"Inclusão de informações nutricionais\")\r\n  }\r\n\r\n  showAlteracao(item: ProdutoInfoNutricionalDTO) {\r\n    this.alterarProdutoComp(item)\r\n    this.showPopup(\"Alteração de informações nutricionais\")\r\n  }\r\n\r\n  btnConfirmar(value: any) {\r\n    EventEmitterService.closePopup(this.nomeJanePopup);\r\n    this.onClickConfirm.emit(value);\r\n  }\r\n\r\n  criarFormProdInfo() {\r\n    this.formProdInfo = this.fb.group({\r\n      idProduto: [],\r\n      infoNutricional: ['', Validators.required],\r\n      unidade: ['', Validators.required],\r\n      qtUtilizada: ['', Validators.required],\r\n      emAlteracao: [false]\r\n    })\r\n  }\r\n\r\n  compProdCheckMostrar(valor: boolean) {\r\n    this.formProdInfo.patchValue({\r\n      mostrarUnidade: valor ? 'S' : 'N'\r\n    });\r\n  }\r\n\r\n\r\n  private alterarProdutoComp(item: ProdutoInfoNutricionalDTO) {\r\n    this.formProdInfo.patchValue({\r\n        idProduto: item.idProduto,\r\n        infoNutricional: [{ id: item.idInfoNutricional, text: item.dsInfoNutricional }],\r\n        unidade: [{ id: item.idUnidadeMedida, text: item.sgUnidadeMedida }],\r\n        qtUtilizada: ['', Validators.required],\r\n        emAlteracao: [false]\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/cadastros/produto/popup/info-nutricional-produto-popup-modal.component.ts","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { create } from 'domain';\r\n\r\n\r\nimport { ListarProdutosComponent } from './listar/listar-produtos.component';\r\nimport { CreateProdutoComponent } from './create/create-produto.component';\r\nimport { EditProdutosComponent }   from './edit/edit-produtos.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'listar',\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: '',\r\n    data: {\r\n      title: 'Produtos'\r\n    },\r\n    children: [\r\n      {\r\n        path: 'listar',\r\n        component: ListarProdutosComponent,\r\n        data: {\r\n          title: 'Listar'\r\n        }\r\n      },\r\n      {\r\n        path: 'novo',\r\n        component: CreateProdutoComponent,\r\n        data: {\r\n          title: 'Novo produto'\r\n        }\r\n      },\r\n      {\r\n        path: 'editar/:id',\r\n        component: EditProdutosComponent,\r\n        data: {\r\n          title: 'Alterar produto'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProdutoRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/cadastros/produto/produto-routing.module.ts","import { InfoNutricionalService } from './../../config/infonutricional/info-nutricional.service';\r\nimport { ComposicaoProdutoPopupModalComponent } from './popup/composicao-produto-popup-modal.component';\r\nimport { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SelectModule } from 'ng2-select';\r\nimport { LaddaModule } from 'angular2-ladda';\r\nimport { ModalModule } from 'ng2-bootstrap/modal';\r\nimport { PopupModalModule } from 'app/shared/popup/popup-modal.module';\r\nimport { ProdutoService } from './produto.service';\r\nimport { CategoriaService } from './../../config/categoria/categoria.service';\r\nimport { SharedComponentModule } from './../../../shared/shared-component.module';\r\nimport { ProdutoRoutingModule } from './produto-routing.module';\r\nimport { ListarProdutosComponent } from './listar/listar-produtos.component';\r\nimport { CreateProdutoComponent } from './create/create-produto.component';\r\nimport { EditProdutosComponent } from './edit/edit-produtos.component';\r\nimport { StorageService } from './../../../../services/storage.service';\r\nimport { NumberOnlyDirective } from '../../../shared/directive/number-only.directive';\r\nimport { TextMaskModule } from 'angular2-text-mask';\r\nimport { CurrencyMaskModule } from \"ng2-currency-mask\";\r\nimport { UnidadeMedidaService } from './../../config/unidademedida/unidade-medida.service';\r\n\r\nimport { TabsModule } from 'ng2-bootstrap/tabs';\r\nimport { InfoNutricionalProdutoPopupModalComponent } from './popup/info-nutricional-produto-popup-modal.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ModalModule.forRoot(),\r\n    SharedComponentModule,\r\n    ReactiveFormsModule,\r\n    PopupModalModule,\r\n    HttpClientModule,\r\n    ProdutoRoutingModule,\r\n    SelectModule,\r\n    TabsModule,\r\n    LaddaModule,\r\n    TextMaskModule,\r\n    CurrencyMaskModule\r\n  ],\r\n  declarations: [\r\n    ListarProdutosComponent,\r\n    CreateProdutoComponent,\r\n    EditProdutosComponent,\r\n    ComposicaoProdutoPopupModalComponent,\r\n    InfoNutricionalProdutoPopupModalComponent\r\n  ],\r\n  providers:[\r\n    ProdutoService,\r\n    CategoriaService,\r\n    UnidadeMedidaService,\r\n    StorageService,\r\n    InfoNutricionalService\r\n  ]\r\n})\r\nexport class ProdutoModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pages/cadastros/produto/produto.module.ts"],"sourceRoot":"webpack:///"}